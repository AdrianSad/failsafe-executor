version: 2.1

commands:
  install-dockerize:
    steps:
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
  maven-package:
    steps:
      - checkout
      - restore_cache:
          key: failsafe-executor-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: failsafe-executor-{{ checksum "pom.xml" }}
      - run: mvn package
      - store_test_results:
          path: target/surefire-reports

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - maven-package
      - run: mv target/jacoco.exec target/jacoco-h2.exec

  test-postgres:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
      - image: circleci/postgres:12-alpine
        environment:
          POSTGRES_USER: failsafe
          POSTGRES_PASSWORD: failsafe
          POSTGRES_DB: failsafe
    environment:
      TEST_DB: POSTGRES
    steps:
      - install-dockerize
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - maven-package
      - run: mv target/jacoco.exec target/jacoco-postgres.exec

  test-mysql:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: failsafe
          MYSQL_DATABASE: failsafe
          MYSQL_USER: failsafe
          MYSQL_PASSWORD: failsafe
    environment:
      TEST_DB: MYSQL
    steps:
      - install-dockerize
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - maven-package
      - run: mv target/jacoco.exec target/jacoco-mysql.exec

  code_coverage_report:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - run: ls target/*.exec
      - run: mvn jacoco:merge
      - run: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test-postgres
      - test-mysql
      - code_coverage_report
        requires:
          - build
          - test-postgres
          - test-mysql